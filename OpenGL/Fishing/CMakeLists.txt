cmake_minimum_required (VERSION 3.2)
project (Rayshader)
set (CMAKE_C_COMPILER "clang")
set (CMAKE_CXX_COMPILER "clang++")
set (CMAKE_CXX_FLAGS "-std=c++17 -stdlib=libc++ -Wno-deprecated")
include_directories ("${PROJECT_SOURCE_DIR}/include")

option (OPENGL_USE_APPLE_X11 "Use X11" ON)
option (USE_FREEIMAGE "Use FreeImage" OFF)

if (OPENGL_USE_APPLE_X11)
    include_directories ("/opt/X11/include")
    find_library (OPENGL_gl_LIBRARY gl /opt/X11/lib)
    find_library (OPENGL_glu_LIBRARY glu /opt/X11/lib)
    set (OPENGL_glut_LIBRARY /opt/X11/lib/libglut.dylib)
    message ("${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY} ${OPENGL_glut_LIBRARY}")
    set (EXTRA_LIBS ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY} ${OPENGL_glut_LIBRARY})
    add_executable (mainX11 main.cpp)
    set (TARGETFLAGS -DX11=1)
    set_target_properties (mainX11 PROPERTIES COMPILE_FLAGS ${TARGETFLAGS})
    target_link_libraries (mainX11 ${EXTRA_LIBS})

    if (USE_FREEIMAGE)
        # add FreeImage include and lib
        include_directories ("/usr/local/include")
        find_library (FREEIMAGE_LIBRARY freeimage /usr/local/lib)
        set (EXTRA_LIBS ${EXTRA_LIBS} ${FREEIMAGE_LIBRARY})

        add_executable (mainX11F main.cpp)
        set (TARGETFLAGS "${TARGETFLAGS} -DUSEFREEIMAGE=1")
        message ("${EXTRA_LIBS} ${TARGETFLAGS}")
        set_target_properties (mainX11F PROPERTIES COMPILE_FLAGS ${TARGETFLAGS})
        target_link_libraries (mainX11F ${EXTRA_LIBS})

    endif (USE_FREEIMAGE)
endif (OPENGL_USE_APPLE_X11)

if (APPLE)
    # include_directories (/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/)
    include_directories (/System/Library/Frameworks/)
    find_library (GLUT_LIBRARIES GLUT)
    find_library (OpenGL_LIBRARIES OpenGL)
    set (EXTRA_LIBS ${GLUT_LIBRARIES} ${OpenGL_LIBRARIES})

    add_executable (main main.cpp)
    set_target_properties (main PROPERTIES COMPILE_FLAGS ${TARGETFLAGS})
    target_link_libraries (main ${EXTRA_LIBS})

    if (USE_FREEIMAGE)
        include_directories ("/usr/local/include")
        find_library (FREEIMAGE_LIBRARY freeimage /usr/local/lib)
        set (EXTRA_LIBS ${EXTRA_LIBS} ${FREEIMAGE_LIBRARY})
        add_executable (mainF main.cpp)
        set (TARGETFLAGS -DUSEFREEIMAGE=1)
        set_target_properties (mainF PROPERTIES COMPILE_FLAGS ${TARGETFLAGS})
        target_link_libraries (mainF ${EXTRA_LIBS})
    endif (USE_FREEIMAGE)
endif (APPLE)
